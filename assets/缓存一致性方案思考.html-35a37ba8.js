const e=JSON.parse('{"key":"v-0e7a6d58","path":"/distributed/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E6%96%B9%E6%A1%88%E6%80%9D%E8%80%83.html","title":"缓存一致性方案思考","lang":"zh-CN","frontmatter":{"title":"缓存一致性方案思考","category":["分布式"],"tag":["随笔"],"date":"2023-07-09T19:00:00.000Z","description":"一、缓存的查询 先查询缓存，如果缓存查询失败，就去查询数据库，然后重新生成缓存。 二、缓存的更新 在高并发的情况下，需要考虑下面两个问题： 是先更新数据库还是先更新缓存？; 是更新缓存还是删除缓存？; 1. 先更新数据库再更新缓存 线程A：更新数据库（第1s）——> 更新缓存（第10s） 线程B：更新数据库 （第3s）——> 更新缓存（第5s） 上面情...","head":[["meta",{"property":"og:url","content":"https://floweryu.top/distributed/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E6%96%B9%E6%A1%88%E6%80%9D%E8%80%83.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"缓存一致性方案思考"}],["meta",{"property":"og:description","content":"一、缓存的查询 先查询缓存，如果缓存查询失败，就去查询数据库，然后重新生成缓存。 二、缓存的更新 在高并发的情况下，需要考虑下面两个问题： 是先更新数据库还是先更新缓存？; 是更新缓存还是删除缓存？; 1. 先更新数据库再更新缓存 线程A：更新数据库（第1s）——> 更新缓存（第10s） 线程B：更新数据库 （第3s）——> 更新缓存（第5s） 上面情..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-15T14:09:26.000Z"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"随笔"}],["meta",{"property":"article:published_time","content":"2023-07-09T19:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-15T14:09:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"缓存一致性方案思考\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-09T19:00:00.000Z\\",\\"dateModified\\":\\"2023-11-15T14:09:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://github.com/Floweryu/floweryu.github.io\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"一、缓存的查询","slug":"一、缓存的查询","link":"#一、缓存的查询","children":[]},{"level":2,"title":"二、缓存的更新","slug":"二、缓存的更新","link":"#二、缓存的更新","children":[]},{"level":2,"title":"三、操作失败如何","slug":"三、操作失败如何","link":"#三、操作失败如何","children":[]},{"level":2,"title":"四、总结","slug":"四、总结","link":"#四、总结","children":[{"level":3,"title":"1. cache aside并非万能","slug":"_1-cache-aside并非万能","link":"#_1-cache-aside并非万能","children":[]},{"level":3,"title":"2. 缓存数据不一致的解决方案","slug":"_2-缓存数据不一致的解决方案","link":"#_2-缓存数据不一致的解决方案","children":[]}]},{"level":2,"title":"参考文章：","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1700057366000,"updatedTime":1700057366000,"contributors":[{"name":"Floweryu","email":"im.zhangjunfeng@qq.com","commits":1}]},"readingTime":{"minutes":7.12,"words":2136},"filePathRelative":"distributed/缓存一致性方案思考.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
