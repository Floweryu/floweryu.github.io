const e=JSON.parse('{"key":"v-a7b6b42c","path":"/java/basic/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E5%BA%8F%E5%88%97%E5%8C%96.html","title":"深入理解Java序列化","lang":"zh-CN","frontmatter":{"title":"深入理解Java序列化","category":["Java"],"tag":["后端","Java基础"],"date":"2024-01-04T17:20:00.000Z","description":"序列化简介 序列化（serialize）：序列化是将对象转换为字节流。; 反序列化（deserialize） ： 反序列化是将字节流转换为对象。; 序列化用途：; 序列化可以将对象的字节序列持久化——保存在内存、文件、数据库中。; 在网络上传送对象的字节序列。; 对象序列化不会关注类中的静态变量。 Java 序列化和反序列化 Java 通过对象输入输出...","head":[["meta",{"property":"og:url","content":"https://floweryu.top/java/basic/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E5%BA%8F%E5%88%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"深入理解Java序列化"}],["meta",{"property":"og:description","content":"序列化简介 序列化（serialize）：序列化是将对象转换为字节流。; 反序列化（deserialize） ： 反序列化是将字节流转换为对象。; 序列化用途：; 序列化可以将对象的字节序列持久化——保存在内存、文件、数据库中。; 在网络上传送对象的字节序列。; 对象序列化不会关注类中的静态变量。 Java 序列化和反序列化 Java 通过对象输入输出..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-04T12:57:48.000Z"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2024-01-04T17:20:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-04T12:57:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解Java序列化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-04T17:20:00.000Z\\",\\"dateModified\\":\\"2024-01-04T12:57:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://github.com/Floweryu/floweryu.github.io\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"序列化简介","slug":"序列化简介","link":"#序列化简介","children":[]},{"level":2,"title":"Java 序列化和反序列化","slug":"java-序列化和反序列化","link":"#java-序列化和反序列化","children":[]},{"level":2,"title":"Serializable 接口","slug":"serializable-接口","link":"#serializable-接口","children":[{"level":3,"title":"serialVersionUID","slug":"serialversionuid","link":"#serialversionuid","children":[]},{"level":3,"title":"默认序列化机制","slug":"默认序列化机制","link":"#默认序列化机制","children":[]},{"level":3,"title":"transient","slug":"transient","link":"#transient","children":[]}]},{"level":2,"title":"Externalizable 接口","slug":"externalizable-接口","link":"#externalizable-接口","children":[{"level":3,"title":"Externalizable 接口的替代方法","slug":"externalizable-接口的替代方法","link":"#externalizable-接口的替代方法","children":[]}]},{"level":2,"title":"readResolve() 方法","slug":"readresolve-方法","link":"#readresolve-方法","children":[]},{"level":2,"title":"Java 序列化问题","slug":"java-序列化问题","link":"#java-序列化问题","children":[]},{"level":2,"title":"Java 序列化的缺陷","slug":"java-序列化的缺陷","link":"#java-序列化的缺陷","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1704373068000,"updatedTime":1704373068000,"contributors":[{"name":"floweryu","email":"floweryu@qq.com","commits":1}]},"readingTime":{"minutes":8.85,"words":2654},"filePathRelative":"java/basic/深入理解Java序列化.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
