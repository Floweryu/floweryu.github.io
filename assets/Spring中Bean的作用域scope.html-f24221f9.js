const e=JSON.parse('{"key":"v-84831d5a","path":"/spring/Spring%E4%B8%ADBean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9Fscope.html","title":"Spring中Bean的作用域","lang":"zh-CN","frontmatter":{"title":"Spring中Bean的作用域","category":["Spring"],"tag":["后端"],"date":"2023-07-30T20:30:00.000Z","description":"五种模式 Singleton 单例模式 Spring 默认的 scope，表示 Spring 容器只创建一个 bean 的实例，Spring 在创建第一次后会缓存起来，之后不再创建，就是设计模式中的单例模式。 单例 Bean 优势 减少了新生成实例的消耗; 减少jvm垃圾回收; 可以快速获取到bean; 单例 Bean 的劣势 在并发环境下线程不安全？...","head":[["meta",{"property":"og:url","content":"https://floweryu.top/spring/Spring%E4%B8%ADBean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9Fscope.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"Spring中Bean的作用域"}],["meta",{"property":"og:description","content":"五种模式 Singleton 单例模式 Spring 默认的 scope，表示 Spring 容器只创建一个 bean 的实例，Spring 在创建第一次后会缓存起来，之后不再创建，就是设计模式中的单例模式。 单例 Bean 优势 减少了新生成实例的消耗; 减少jvm垃圾回收; 可以快速获取到bean; 单例 Bean 的劣势 在并发环境下线程不安全？..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-28T03:12:10.000Z"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:published_time","content":"2023-07-30T20:30:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-28T03:12:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring中Bean的作用域\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-30T20:30:00.000Z\\",\\"dateModified\\":\\"2023-12-28T03:12:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://github.com/Floweryu/floweryu.github.io\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"五种模式","slug":"五种模式","link":"#五种模式","children":[{"level":3,"title":"Singleton 单例模式","slug":"singleton-单例模式","link":"#singleton-单例模式","children":[{"level":4,"title":"单例 Bean 优势","slug":"单例-bean-优势","link":"#单例-bean-优势","children":[]},{"level":4,"title":"单例 Bean 的劣势","slug":"单例-bean-的劣势","link":"#单例-bean-的劣势","children":[]}]},{"level":3,"title":"Prototype","slug":"prototype","link":"#prototype","children":[]},{"level":3,"title":"Request","slug":"request","link":"#request","children":[]},{"level":3,"title":"Session","slug":"session","link":"#session","children":[]},{"level":3,"title":"GlobalSession","slug":"globalsession","link":"#globalsession","children":[]}]},{"level":2,"title":"在创建bean的时候如何指定呢？","slug":"在创建bean的时候如何指定呢","link":"#在创建bean的时候如何指定呢","children":[{"level":3,"title":"xml 方式","slug":"xml-方式","link":"#xml-方式","children":[]},{"level":3,"title":"注解方式","slug":"注解方式","link":"#注解方式","children":[]}]}],"git":{"createdTime":1703733130000,"updatedTime":1703733130000,"contributors":[{"name":"floweryu","email":"floweryu@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":372},"filePathRelative":"spring/Spring中Bean的作用域scope.md","localizedDate":"2023年7月30日","autoDesc":true}');export{e as data};
