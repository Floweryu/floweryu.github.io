import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as r,a}from"./app-97bbaf68.js";const e="/assets/202207241454438-f7235a84.png",i="/assets/202207241456533-451a867d.png",o="/assets/202207241512712-b9cc4fe9.png",h={},p=a('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><blockquote><p>业务中有一张表user_like，该表记录的是短视频中用户互相关注的数据，比如A关注B，则插一条记录，B关注A，则插一条记录。所以在1500w日活的大背景下，该表所在的库已经扛不住了（也有历史原因），目前是128张表。</p></blockquote><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>将该表所在库扩展为两个库，每个库还是128张表，但是每个表的数据会减半。</p><h2 id="迁移方案" tabindex="-1"><a class="header-anchor" href="#迁移方案" aria-hidden="true">#</a> 迁移方案</h2><ol><li>新建两个新数据库集群，每个新库都是128张表(0~127)，同时同步老数据库数据到两个新集群。两个新集群的数据要做到实时同步，老库添加修改哪条数据，两个新库也要跟着变化。</li></ol><figure><img src="'+e+'" alt="image-20220724145422950" tabindex="0" loading="lazy"><figcaption>image-20220724145422950</figcaption></figure><ol start="2"><li>上线代码，分库分表映射方案在后面。使用两个新集群的数据库地址，进行查询和插入。这时两个新数据库的proxy还是指向旧数据库。同时验证数据是否写到旧数据库。如果直接将proxy链接到新库A和B，会造成主键冲突。</li></ol><figure><img src="'+i+'" alt="image-20220724145612990" tabindex="0" loading="lazy"><figcaption>image-20220724145612990</figcaption></figure><ol start="3"><li>DBA将两个新数据库的proxyA和proxyB同时指向两个新集群（30s内）</li></ol><p>这一步会有一个问题，当Aproxy切换完成后，Bproxy还没来得及切换时，Bproxy还是指向的旧数据库。此时Aproxy切换成功了，Aproxy已经开始向新数据库A中写入数据了，后面旧数据库在向新数据库中同步数据时，会造成主键冲突的异常。所以会丢失一小段时间数据（大概是Aproxy切换完成到Bproxy切换完成这段时间），参考下图：</p><figure><img src="'+o+'" alt="image-20220724151207419" tabindex="0" loading="lazy"><figcaption>image-20220724151207419</figcaption></figure><p>丢失的这段时间的数据，后续可以让DBA修复。</p><p>最后按照分库分表方案删除AB数据库中无用的数据，因为之前两个库数据一致，冗余了。</p><h2 id="分库分表方案" tabindex="-1"><a class="header-anchor" href="#分库分表方案" aria-hidden="true">#</a> 分库分表方案</h2><p>有两个常量：数据库数量，每个库的表数量，总表数=数据库数x每个库表数目</p><p>虚拟表id = 用户id % 总表数</p><p>库号 = 虚拟表id / 每个库表数目</p><p>表号 = 用户id % 每个库表数目</p><p>举例：假设是1个库，4个表。打算把库扩展为2个库，每个库还是4张表（每张表数据量减半）</p><table><thead><tr><th>表号</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>用户id</td><td>0</td><td>1</td><td>2</td><td>3</td></tr><tr><td></td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td></td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td></td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td></td><td>16</td><td>17</td><td>18</td><td>19</td></tr><tr><td></td><td>20</td><td>21</td><td>22</td><td>23</td></tr></tbody></table><p>将上面数据，拆分成两个数据库，数据如下：</p><p><strong>0号库</strong>：</p><table><thead><tr><th>表号</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>用户id</td><td>0</td><td>1</td><td>2</td><td>3</td></tr><tr><td></td><td>8</td><td>9</td><td>10</td><td>11</td></tr><tr><td></td><td>16</td><td>17</td><td>18</td><td>19</td></tr></tbody></table><p><strong>1号库</strong>：</p><table><thead><tr><th>表号</th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>用户id</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td></td><td>12</td><td>13</td><td>14</td><td>15</td></tr><tr><td></td><td>20</td><td>21</td><td>22</td><td>23</td></tr></tbody></table>',26),s=[p];function n(l,c){return d(),r("div",null,s)}const f=t(h,[["render",n],["__file","记一次数据库扩容处理过程.html.vue"]]);export{f as default};
