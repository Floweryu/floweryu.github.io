const e=JSON.parse('{"key":"v-0ec37c0d","path":"/algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B8%93%E9%A2%98.html","title":"动态规划专题","lang":"zh-CN","frontmatter":{"title":"动态规划专题","category":["算法"],"tag":["动态规划"],"date":"2023-07-16T20:00:00.000Z","description":"剑指 Offer II 095. 最长公共子序列 https://leetcode.cn/problems/qJnOS7/ 给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。 一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符...","head":[["meta",{"property":"og:url","content":"https://floweryu.top/algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B8%93%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"动态规划专题"}],["meta",{"property":"og:description","content":"剑指 Offer II 095. 最长公共子序列 https://leetcode.cn/problems/qJnOS7/ 给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。 一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-15T14:09:26.000Z"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:published_time","content":"2023-07-16T20:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-15T14:09:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态规划专题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-16T20:00:00.000Z\\",\\"dateModified\\":\\"2023-11-15T14:09:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://github.com/Floweryu/floweryu.github.io\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"剑指 Offer II 095. 最长公共子序列","slug":"剑指-offer-ii-095-最长公共子序列","link":"#剑指-offer-ii-095-最长公共子序列","children":[]},{"level":2,"title":"剑指 Offer II 099. 最小路径之和","slug":"剑指-offer-ii-099-最小路径之和","link":"#剑指-offer-ii-099-最小路径之和","children":[]},{"level":2,"title":"剑指 Offer II 089. 房屋偷盗","slug":"剑指-offer-ii-089-房屋偷盗","link":"#剑指-offer-ii-089-房屋偷盗","children":[]},{"level":2,"title":"剑指 Offer II 090. 环形房屋偷盗","slug":"剑指-offer-ii-090-环形房屋偷盗","link":"#剑指-offer-ii-090-环形房屋偷盗","children":[]},{"level":2,"title":"剑指 Offer II 091. 粉刷房子","slug":"剑指-offer-ii-091-粉刷房子","link":"#剑指-offer-ii-091-粉刷房子","children":[]},{"level":2,"title":"剑指 Offer II 092. 翻转字符","slug":"剑指-offer-ii-092-翻转字符","link":"#剑指-offer-ii-092-翻转字符","children":[]},{"level":2,"title":"剑指 Offer II 093. 最长斐波那契数列","slug":"剑指-offer-ii-093-最长斐波那契数列","link":"#剑指-offer-ii-093-最长斐波那契数列","children":[]},{"level":2,"title":"剑指 Offer II 096. 字符串交织","slug":"剑指-offer-ii-096-字符串交织","link":"#剑指-offer-ii-096-字符串交织","children":[]},{"level":2,"title":"剑指 Offer II 098. 路径的数目","slug":"剑指-offer-ii-098-路径的数目","link":"#剑指-offer-ii-098-路径的数目","children":[]},{"level":2,"title":"剑指 Offer II 100. 三角形中最小路径之和","slug":"剑指-offer-ii-100-三角形中最小路径之和","link":"#剑指-offer-ii-100-三角形中最小路径之和","children":[]},{"level":2,"title":"剑指 Offer II 101. 分割等和子集","slug":"剑指-offer-ii-101-分割等和子集","link":"#剑指-offer-ii-101-分割等和子集","children":[]},{"level":2,"title":"剑指 Offer II 102. 加减的目标值","slug":"剑指-offer-ii-102-加减的目标值","link":"#剑指-offer-ii-102-加减的目标值","children":[]},{"level":2,"title":"剑指 Offer II 103. 最少的硬币数目","slug":"剑指-offer-ii-103-最少的硬币数目","link":"#剑指-offer-ii-103-最少的硬币数目","children":[]},{"level":2,"title":"剑指 Offer II 104. 排列的数目","slug":"剑指-offer-ii-104-排列的数目","link":"#剑指-offer-ii-104-排列的数目","children":[]},{"level":2,"title":"2770. 达到末尾下标所需的最大跳跃次数","slug":"_2770-达到末尾下标所需的最大跳跃次数","link":"#_2770-达到末尾下标所需的最大跳跃次数","children":[]},{"level":2,"title":"931. 下降路径最小和","slug":"_931-下降路径最小和","link":"#_931-下降路径最小和","children":[]}],"git":{"createdTime":1700057366000,"updatedTime":1700057366000,"contributors":[{"name":"Floweryu","email":"im.zhangjunfeng@qq.com","commits":1}]},"readingTime":{"minutes":24.51,"words":7353},"filePathRelative":"algorithm/动态规划专题.md","localizedDate":"2023年7月16日","autoDesc":true}');export{e as data};
