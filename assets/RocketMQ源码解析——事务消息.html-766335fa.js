const t=JSON.parse('{"key":"v-6629ad91","path":"/middleware/rocketmq/RocketMQ%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF.html","title":"RocketMQ源码解析——事务消息","lang":"zh-CN","frontmatter":{"title":"RocketMQ源码解析——事务消息","date":"2023-10-30T16:25:00.000Z","category":["RocketMQ"],"tag":["后端","中间件"],"description":"一、概要 RocketMQ采用了2PC的思想来实现了提交事务消息，同时增加一个补偿逻辑来处理二阶段超时或者失败的消息 image-20221113154641351 所以，事务消息大致分两个流程：正常事务消息的发送及提交、事务消息的补偿流程 1.1 事务消息发送及提交（序号对照上图） 生产者发送消息（half消息）到服务端 服务端响应消息写入结果给生产者 根据第1步的发送结果执行本地事务（如果第1步写入失败，half消息对消费者不可见，本地逻辑也就不执行） 根据本地事务状态执行commit或者rollback操作（commit操作生成消息索引，消息此时对消费者可见）","head":[["meta",{"property":"og:url","content":"https://floweryu.top/middleware/rocketmq/RocketMQ%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"RocketMQ源码解析——事务消息"}],["meta",{"property":"og:description","content":"一、概要 RocketMQ采用了2PC的思想来实现了提交事务消息，同时增加一个补偿逻辑来处理二阶段超时或者失败的消息 image-20221113154641351 所以，事务消息大致分两个流程：正常事务消息的发送及提交、事务消息的补偿流程 1.1 事务消息发送及提交（序号对照上图） 生产者发送消息（half消息）到服务端 服务端响应消息写入结果给生产者 根据第1步的发送结果执行本地事务（如果第1步写入失败，half消息对消费者不可见，本地逻辑也就不执行） 根据本地事务状态执行commit或者rollback操作（commit操作生成消息索引，消息此时对消费者可见）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://floweryu.top/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-14T09:47:27.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"RocketMQ源码解析——事务消息"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:published_time","content":"2023-10-30T16:25:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-14T09:47:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RocketMQ源码解析——事务消息\\",\\"image\\":[\\"https://floweryu.top/\\"],\\"datePublished\\":\\"2023-10-30T16:25:00.000Z\\",\\"dateModified\\":\\"2023-11-14T09:47:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://floweryu.top\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"一、概要","slug":"一、概要","link":"#一、概要","children":[]}],"git":{"createdTime":1699955247000,"updatedTime":1699955247000,"contributors":[{"name":"zhangjunfeng","email":"im.zhangjunfeng@qq.com","commits":1}]},"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"middleware/rocketmq/RocketMQ源码解析——事务消息.md","localizedDate":"2023年10月30日","excerpt":"<h2> 一、概要</h2>\\n<p>RocketMQ采用了<strong>2PC</strong>的思想来实现了提交事务消息，同时增加<strong>一个补偿逻辑</strong>来处理二阶段超时或者失败的消息</p>\\n<figure><figcaption>image-20221113154641351</figcaption></figure>\\n<p>所以，事务消息大致分两个流程：<strong>正常事务消息的发送及提交</strong>、<strong>事务消息的补偿流程</strong></p>\\n<h4> 1.1 事务消息发送及提交（序号对照上图）</h4>\\n<ol>\\n<li>生产者发送消息（half消息）到服务端</li>\\n<li>服务端响应消息写入结果给生产者</li>\\n<li>根据第1步的发送结果执行本地事务（如果第1步写入失败，<strong>half消息对消费者不可见</strong>，本地逻辑也就不执行）</li>\\n<li>根据本地事务状态执行commit或者rollback操作（commit操作生成消息索引，<strong>消息此时对消费者可见</strong>）</li>\\n</ol>","autoDesc":true}');export{t as data};
