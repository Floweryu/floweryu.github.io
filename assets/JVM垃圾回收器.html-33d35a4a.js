const e=JSON.parse('{"key":"v-0d12b8e6","path":"/java/jvm/JVM%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8.html","title":"JVM垃圾回收器","lang":"zh-CN","frontmatter":{"title":"JVM垃圾回收器","category":["Java"],"tag":["后端","JVM"],"date":"2023-10-23T13:00:00.000Z","description":"串行收集器 串行收集器采用单线程 stop-the-world 的方式进行收集。当内存不足时，串行 GC 设置停顿标识，待所有线程都进入安全点（Safepoint）时，应用线程暂停，串行 GC 开始工作，采用单线程方式回收空间并整理内存。 特点： 单线程意味着复杂度更低、占用内存更少，垃圾回收效率高；但同时也意味着不能有效利用多核优势。; 特别适合堆内...","head":[["meta",{"property":"og:url","content":"https://floweryu.top/java/jvm/JVM%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"Floweryu"}],["meta",{"property":"og:title","content":"JVM垃圾回收器"}],["meta",{"property":"og:description","content":"串行收集器 串行收集器采用单线程 stop-the-world 的方式进行收集。当内存不足时，串行 GC 设置停顿标识，待所有线程都进入安全点（Safepoint）时，应用线程暂停，串行 GC 开始工作，采用单线程方式回收空间并整理内存。 特点： 单线程意味着复杂度更低、占用内存更少，垃圾回收效率高；但同时也意味着不能有效利用多核优势。; 特别适合堆内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-18T12:50:13.000Z"}],["meta",{"property":"article:author","content":"Floweryu"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2023-10-23T13:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-18T12:50:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM垃圾回收器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-23T13:00:00.000Z\\",\\"dateModified\\":\\"2023-11-18T12:50:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Floweryu\\",\\"url\\":\\"https://github.com/Floweryu/floweryu.github.io\\",\\"email\\":\\"869830837@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"串行收集器","slug":"串行收集器","link":"#串行收集器","children":[{"level":3,"title":"Serial + Serial Old 收集器","slug":"serial-serial-old-收集器","link":"#serial-serial-old-收集器","children":[]}]},{"level":2,"title":"并行收集器","slug":"并行收集器","link":"#并行收集器","children":[{"level":3,"title":"Parallel Scavenge + Parallel Old收集器","slug":"parallel-scavenge-parallel-old收集器","link":"#parallel-scavenge-parallel-old收集器","children":[]}]},{"level":2,"title":"并发标记清除收集器","slug":"并发标记清除收集器","link":"#并发标记清除收集器","children":[{"level":3,"title":"CMS 收集器","slug":"cms-收集器","link":"#cms-收集器","children":[]},{"level":3,"title":"ParNew 收集器","slug":"parnew-收集器","link":"#parnew-收集器","children":[]},{"level":3,"title":"G1收集器","slug":"g1收集器","link":"#g1收集器","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考：","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1700311813000,"updatedTime":1700311813000,"contributors":[{"name":"Floweryu","email":"im.zhangjunfeng@qq.com","commits":1}]},"readingTime":{"minutes":33.79,"words":10138},"filePathRelative":"java/jvm/JVM垃圾回收器.md","localizedDate":"2023年10月23日","autoDesc":true}');export{e as data};
